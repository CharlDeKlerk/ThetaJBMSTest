/*
Deployment script for JBMS

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "JBMS"
:setvar DefaultFilePrefix "JBMS"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 3ff4bf3f-2d57-41bb-8c72-059c6d100aef is skipped, element [dbo].[JBMSConfiguration].[Id] (SqlSimpleColumn) will not be renamed to JBMSConfigurationID';


GO
PRINT N'Rename refactoring operation with key bd9e2292-9452-4521-b7d2-201bf029c5af is skipped, element [dbo].[JBMSMessage].[Id] (SqlSimpleColumn) will not be renamed to TSWMessageID';


GO
PRINT N'Rename refactoring operation with key c4e14004-995f-4622-85d3-599078f4f349, d938ea96-b2f2-4146-9ebf-73c1e712d087 is skipped, element [dbo].[JBMSStatus].[Id] (SqlSimpleColumn) will not be renamed to StatusID';


GO
PRINT N'Rename refactoring operation with key de13388c-8b02-4aac-8736-8b6906c772db is skipped, element [dbo].[JBMSStatus].[JBMSStatus] (SqlSimpleColumn) will not be renamed to Status';


GO
PRINT N'Rename refactoring operation with key dd3eac2e-3694-4c22-acf1-b6eea01c42c6 is skipped, element [dbo].[FK_JBMSPolling_To_JBMSStatus] (SqlForeignKeyConstraint) will not be renamed to [FK_JBMSPolling_JBMSStatus]';


GO
PRINT N'Rename refactoring operation with key d103efd0-17ea-4911-91e8-44ebe1860f99 is skipped, element [dbo].[JBMSAttachment].[Id] (SqlSimpleColumn) will not be renamed to TWSAttachmentID';


GO
PRINT N'Rename refactoring operation with key dfc08744-229e-436c-b2db-9042402346b8 is skipped, element [dbo].[FK_JBMSAttachment_ToTable] (SqlForeignKeyConstraint) will not be renamed to [FK_JBMSAttachment_JBMSMessage]';


GO
PRINT N'Rename refactoring operation with key 9e7e1c54-ef9e-4aa3-ac74-289fd7515720 is skipped, element [dbo].[JBMSAttachment].[Href] (SqlSimpleColumn) will not be renamed to MessageName';


GO
PRINT N'Creating [dbo].[JBMSAttachment]...';


GO
CREATE TABLE [dbo].[JBMSAttachment] (
    [TWSAttachmentID]    INT            IDENTITY (1, 1) NOT NULL,
    [TSWMessageID]       INT            NOT NULL,
    [MessageName]        VARCHAR (50)   NOT NULL,
    [AttachmentDocument] NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([TWSAttachmentID] ASC)
);


GO
PRINT N'Creating [dbo].[JBMSConfiguration]...';


GO
CREATE TABLE [dbo].[JBMSConfiguration] (
    [JBMSConfigurationID] INT           IDENTITY (1, 1) NOT NULL,
    [ConfigurationName]   VARCHAR (50)  NOT NULL,
    [ConfigurationValue]  VARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([JBMSConfigurationID] ASC)
);


GO
PRINT N'Creating [dbo].[JBMSExtMessaage]...';


GO
CREATE TABLE [dbo].[JBMSExtMessaage] (
    [Id]                INT           IDENTITY (1, 1) NOT NULL,
    [MessageID]         VARCHAR (50)  NOT NULL,
    [CustomerReference] VARCHAR (MAX) NOT NULL,
    [DocumentID]        VARCHAR (50)  NOT NULL,
    [Mailbox]           VARCHAR (MAX) NOT NULL,
    [MessageName]       VARCHAR (MAX) NOT NULL,
    [PartnerID]         VARCHAR (50)  NULL,
    [ReceivedDateTime]  DATETIME      NOT NULL,
    [Status]            VARCHAR (50)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[JBMSMessage]...';


GO
CREATE TABLE [dbo].[JBMSMessage] (
    [TSWMessageID]        INT           IDENTITY (1, 1) NOT NULL,
    [MessageID]           VARCHAR (50)  NOT NULL,
    [CustomerReference]   VARCHAR (MAX) NOT NULL,
    [DocumentID]          VARCHAR (50)  NOT NULL,
    [Mailbox]             VARCHAR (MAX) NOT NULL,
    [MessageName]         VARCHAR (MAX) NOT NULL,
    [PartnerID]           VARCHAR (50)  NULL,
    [ReceivedDateTime]    DATETIME      NOT NULL,
    [Status]              VARCHAR (50)  NOT NULL,
    [LastUpdatedDateTime] DATETIME      NOT NULL,
    [ErrorCount]          INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([TSWMessageID] ASC)
);


GO
PRINT N'Creating [dbo].[JBMSPolling]...';


GO
CREATE TABLE [dbo].[JBMSPolling] (
    [JBMSPollingID]       INT          IDENTITY (1, 1) NOT NULL,
    [Submitter]           VARCHAR (50) NOT NULL,
    [EntryID]             VARCHAR (50) NULL,
    [SenderReference]     VARCHAR (50) NULL,
    [MessageID]           VARCHAR (50) NULL,
    [Status]              VARCHAR (50) NOT NULL,
    [LastUpdatedDateTime] DATETIME     NOT NULL,
    PRIMARY KEY CLUSTERED ([JBMSPollingID] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[JBMSExtMessaage]...';


GO
ALTER TABLE [dbo].[JBMSExtMessaage]
    ADD DEFAULT getdate() FOR [ReceivedDateTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[JBMSMessage]...';


GO
ALTER TABLE [dbo].[JBMSMessage]
    ADD DEFAULT getdate() FOR [ReceivedDateTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[JBMSMessage]...';


GO
ALTER TABLE [dbo].[JBMSMessage]
    ADD DEFAULT getdate() FOR [LastUpdatedDateTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[JBMSMessage]...';


GO
ALTER TABLE [dbo].[JBMSMessage]
    ADD DEFAULT 0 FOR [ErrorCount];


GO
PRINT N'Creating unnamed constraint on [dbo].[JBMSPolling]...';


GO
ALTER TABLE [dbo].[JBMSPolling]
    ADD DEFAULT getdate() FOR [LastUpdatedDateTime];


GO
PRINT N'Creating [dbo].[GetExtMessage]...';


GO
CREATE PROCEDURE [dbo].[GetExtMessage]
	@PrevMessageID varchar(50) = null
AS
BEGIN
	SET NOCOUNT ON;

	declare @MessageID int
	if (@PrevMessageID is NULL)
	begin
		select @MessageID = min(MessageID) from JBMSExtMessaage
	end
	else
	begin
		select @MessageID = min(MessageID) from JBMSExtMessaage where MessageID > @PrevMessageID
	end

	select * from JBMSExtMessaage where MessageID = @MessageID

	return @MessageID
END
GO
PRINT N'Creating [dbo].[PollingJBMS]...';


GO
CREATE PROCEDURE [dbo].[PollingJBMS]
	@Submitter varchar(50)
AS

	declare @JBMSPollingID int
	declare @JBMSStatus int
	select	@JBMSPollingID = JBMSPollingID,
		    @JBMSStatus = [Status] 
	from	JBMSPolling
	where	Submitter = @Submitter

	if @JBMSPollingID is null
	begin
		insert into JBMSPolling
			(Submitter, [Status], LastUpdatedDateTime)
		values
			(@Submitter, 'InProgress', getdate())
		set @JBMSPollingID = @@IDENTITY
	end
	else
	begin
		if(@JBMSStatus) <> 2
		begin
			update	JBMSPolling
			set		[Status] = 'InProgress'
			where	Submitter = @Submitter
		end
		else
		begin
			set @JBMSPollingID = 0
		end
	end

	select	JBMSPollingID,
			Submitter,
			EntryID,
			SenderReference,
			isnull(MessageID, '0') as MessageID,
			[Status],
			LastUpdatedDateTime,
			getdate() as CurrentDateTime
	from	JBMSPolling
	where	JBMSPollingID = @JBMSPollingID

	RETURN @JBMSPollingID
GO
PRINT N'Creating [dbo].[SaveJBMSMessage]...';


GO
CREATE PROCEDURE [dbo].[SaveJBMSMessage]
	@MessageID VARCHAR(50), 
    @CustomerReference VARCHAR(MAX), 
    @DocumentID VARCHAR(50), 
    @Mailbox VARCHAR(MAX), 
    @MessageName VARCHAR(MAX), 
    @PartnerID VARCHAR(50),
    @Status VARCHAR(50),  
    @ErrorCount INT
AS
	INSERT into JBMSMessage
	(	
		MessageID, 
		CustomerReference, 
		DocumentID, 
		Mailbox, 
		MessageName, 
		PartnerID,
		ReceivedDateTime,
		[Status], 
		LastUpdatedDateTime,
		ErrorCount
	)
	values
	(	
		@MessageID, 
		@CustomerReference, 
		@DocumentID, 
		@Mailbox, 
		@MessageName, 
		@PartnerID,
		getdate(),
		@Status,  
		getdate(),
		@ErrorCount
	)



RETURN 0
GO
PRINT N'Creating [dbo].[UpdatePolling]...';


GO
CREATE PROCEDURE UpdatePolling
	@EntryID varchar(50),
	@SenderReference varchar(50),
	@MessageID varchar(50),
	@Status varchar(50),
	@JBMSPollingID int
AS
BEGIN
	Update	Polling
	set		EntryID = @EntryID,
			SenderReference = @SenderReference,
			MessageID = @MessageID,
			Status = @Status,
			LastUpdatedDateTime = getdate()
	where	JBMSPollingID = @JBMSPollingID

	RETURN 0
END
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3ff4bf3f-2d57-41bb-8c72-059c6d100aef')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3ff4bf3f-2d57-41bb-8c72-059c6d100aef')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bd9e2292-9452-4521-b7d2-201bf029c5af')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bd9e2292-9452-4521-b7d2-201bf029c5af')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c4e14004-995f-4622-85d3-599078f4f349')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c4e14004-995f-4622-85d3-599078f4f349')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '377bea3d-0fba-437b-8989-c3923f53ada4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('377bea3d-0fba-437b-8989-c3923f53ada4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'de13388c-8b02-4aac-8736-8b6906c772db')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('de13388c-8b02-4aac-8736-8b6906c772db')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd938ea96-b2f2-4146-9ebf-73c1e712d087')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d938ea96-b2f2-4146-9ebf-73c1e712d087')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c2ad0d6d-078a-497d-b4d9-bacfe7cc801d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c2ad0d6d-078a-497d-b4d9-bacfe7cc801d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dd3eac2e-3694-4c22-acf1-b6eea01c42c6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dd3eac2e-3694-4c22-acf1-b6eea01c42c6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd103efd0-17ea-4911-91e8-44ebe1860f99')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d103efd0-17ea-4911-91e8-44ebe1860f99')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dfc08744-229e-436c-b2db-9042402346b8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dfc08744-229e-436c-b2db-9042402346b8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '250bdf8a-e3ad-418c-a14d-0adb183bef51')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('250bdf8a-e3ad-418c-a14d-0adb183bef51')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9e7e1c54-ef9e-4aa3-ac74-289fd7515720')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9e7e1c54-ef9e-4aa3-ac74-289fd7515720')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ebd1e990-7bcc-4f94-985f-f1e11b709eea')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ebd1e990-7bcc-4f94-985f-f1e11b709eea')

GO

GO
PRINT N'Update complete.';


GO
