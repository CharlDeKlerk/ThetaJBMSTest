/*
Deployment script for JBMS

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "JBMS"
:setvar DefaultFilePrefix "JBMS"
:setvar DefaultDataPath "C:\Users\charl.deklerk\AppData\Local\Microsoft\VisualStudio\SSDT\JBMS"
:setvar DefaultLogPath "C:\Users\charl.deklerk\AppData\Local\Microsoft\VisualStudio\SSDT\JBMS"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[JBMSAttachment]...';


GO
CREATE TABLE [dbo].[JBMSAttachment] (
    [TWSAttachmentID]    INT            IDENTITY (1, 1) NOT NULL,
    [TSWMessageID]       INT            NOT NULL,
    [Href]               VARCHAR (MAX)  NOT NULL,
    [AttachmentDocument] NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([TWSAttachmentID] ASC)
);


GO
PRINT N'Creating [dbo].[JBMSConfiguration]...';


GO
CREATE TABLE [dbo].[JBMSConfiguration] (
    [JBMSConfigurationID] INT           IDENTITY (1, 1) NOT NULL,
    [ConfigurationName]   VARCHAR (50)  NOT NULL,
    [ConfigurationValue]  VARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([JBMSConfigurationID] ASC)
);


GO
PRINT N'Creating [dbo].[JBMSMessage]...';


GO
CREATE TABLE [dbo].[JBMSMessage] (
    [TSWMessageID]        INT           IDENTITY (1, 1) NOT NULL,
    [MessageID]           VARCHAR (50)  NOT NULL,
    [CustomerReference]   VARCHAR (MAX) NOT NULL,
    [DocumentID]          VARCHAR (50)  NOT NULL,
    [Mailbox]             VARCHAR (MAX) NOT NULL,
    [MessageName]         VARCHAR (MAX) NOT NULL,
    [PartnerID]           VARCHAR (50)  NULL,
    [ReceivedDateTime]    DATETIME      NOT NULL,
    [StatusID]            INT           NOT NULL,
    [LastUpdatedDateTime] DATETIME      NOT NULL,
    [ErrorCount]          INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([TSWMessageID] ASC)
);


GO
PRINT N'Creating [dbo].[JBMSPolling]...';


GO
CREATE TABLE [dbo].[JBMSPolling] (
    [JBMSPollingID]       INT          IDENTITY (1, 1) NOT NULL,
    [Submitter]           VARCHAR (50) NOT NULL,
    [EntryID]             VARCHAR (50) NOT NULL,
    [SenderReference]     VARCHAR (50) NULL,
    [StatusID]            INT          NOT NULL,
    [LastUpdatedDateTime] DATETIME     NOT NULL,
    PRIMARY KEY CLUSTERED ([JBMSPollingID] ASC)
);


GO
PRINT N'Creating [dbo].[JBMSStatus]...';


GO
CREATE TABLE [dbo].[JBMSStatus] (
    [StatusID] INT          NOT NULL,
    [Status]   VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([StatusID] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[JBMSMessage]...';


GO
ALTER TABLE [dbo].[JBMSMessage]
    ADD DEFAULT getdate() FOR [ReceivedDateTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[JBMSMessage]...';


GO
ALTER TABLE [dbo].[JBMSMessage]
    ADD DEFAULT getdate() FOR [LastUpdatedDateTime];


GO
PRINT N'Creating unnamed constraint on [dbo].[JBMSMessage]...';


GO
ALTER TABLE [dbo].[JBMSMessage]
    ADD DEFAULT 0 FOR [ErrorCount];


GO
PRINT N'Creating [dbo].[FK_JBMSAttachment_JBMSMessage]...';


GO
ALTER TABLE [dbo].[JBMSAttachment]
    ADD CONSTRAINT [FK_JBMSAttachment_JBMSMessage] FOREIGN KEY ([TSWMessageID]) REFERENCES [dbo].[JBMSMessage] ([TSWMessageID]);


GO
PRINT N'Creating [dbo].[FK_JBMSMessage_JBMSStatus]...';


GO
ALTER TABLE [dbo].[JBMSMessage]
    ADD CONSTRAINT [FK_JBMSMessage_JBMSStatus] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[JBMSStatus] ([StatusID]);


GO
PRINT N'Creating [dbo].[FK_JBMSPolling_JBMSStatus]...';


GO
ALTER TABLE [dbo].[JBMSPolling]
    ADD CONSTRAINT [FK_JBMSPolling_JBMSStatus] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[JBMSStatus] ([StatusID]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3ff4bf3f-2d57-41bb-8c72-059c6d100aef')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3ff4bf3f-2d57-41bb-8c72-059c6d100aef')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bd9e2292-9452-4521-b7d2-201bf029c5af')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bd9e2292-9452-4521-b7d2-201bf029c5af')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c4e14004-995f-4622-85d3-599078f4f349')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c4e14004-995f-4622-85d3-599078f4f349')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '377bea3d-0fba-437b-8989-c3923f53ada4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('377bea3d-0fba-437b-8989-c3923f53ada4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'de13388c-8b02-4aac-8736-8b6906c772db')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('de13388c-8b02-4aac-8736-8b6906c772db')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd938ea96-b2f2-4146-9ebf-73c1e712d087')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d938ea96-b2f2-4146-9ebf-73c1e712d087')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c2ad0d6d-078a-497d-b4d9-bacfe7cc801d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c2ad0d6d-078a-497d-b4d9-bacfe7cc801d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dd3eac2e-3694-4c22-acf1-b6eea01c42c6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dd3eac2e-3694-4c22-acf1-b6eea01c42c6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd103efd0-17ea-4911-91e8-44ebe1860f99')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d103efd0-17ea-4911-91e8-44ebe1860f99')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dfc08744-229e-436c-b2db-9042402346b8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dfc08744-229e-436c-b2db-9042402346b8')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
